class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list1 = new ArrayList<>();
        if(root==null) return list1;
        LinkedList<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int k =0;
        while(!queue.isEmpty()){
            List<Integer> list2 = new ArrayList<>();
            int len1 = queue.size();
            for(int i =0 ;i<len1;i++){
                TreeNode node1 = queue.poll();
                list2.add(node1.val);
                if(node1.left!=null){
                    queue.offer(node1.left);
                }
                if(node1.right!=null){
                    queue.offer(node1.right);
                }
            }
            if(k%2==0){
                list1.add(list2);
            }
            else{
                Collections.reverse(list2);
                list1.add(list2);
            }
            k++;
        }
        return list1;
    }
}
