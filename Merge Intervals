class Solution {
    public int[][] merge(int[][] itvs) {
        TreeMap<Integer,Integer> map1 = new TreeMap<>();
        TreeMap<Integer,Integer> map2 = new TreeMap<>();
        for(int i =0;i<itvs.length;i++){
            int num1 = itvs[i][0];
            int num2 = itvs[i][1];
            int num3 = map1.getOrDefault(num1,0);
            num3 = Math.max(num3,num2);
            map1.put(num1,num3);
        }
        int num1 = -1;
        int val1 = -1;
        for(Map.Entry<Integer,Integer> entry : map1.entrySet()){
            if(num1==-1){
                num1 = entry.getKey();
                val1 = entry.getValue();
            } else {
                int num2 = entry.getKey();
                int val2 = entry.getValue();
                if(num1<=num2 && val1>=val2);
                else if(num1<val2 && val1>=num2) val1 = val2;
                else{
                    map2.put(num1,val1);
                    num1 = num2;
                    val1 = val2;
                }
            }
        }
        map2.put(num1,val1);
        int[][] arr2 = new int[map2.size()][2];
        int j =0;
        for(Map.Entry<Integer,Integer> entry : map2.entrySet()){
            int[] arr1 = {entry.getKey(),entry.getValue()};
            arr2[j++] = arr1;
        }
        return arr2;
    }
}
