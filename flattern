// my bad solution 
class Solution {
    ArrayList<TreeNode> list1 = new ArrayList<>();
    public TreeNode recur(TreeNode root){
        if(root==null) return null;
        if(root!=null){
            TreeNode node = new TreeNode();
            node.val = root.val;
            list1.add(node);
        }
        TreeNode node2 = recur(root.left);
        TreeNode node3 = recur(root.right);
        return root;
    }
    public void flatten(TreeNode root) {
        TreeNode root2 = recur(root);
        for(int i=0;i<list1.size()-1;i++){
            TreeNode node1 = list1.get(i);
            TreeNode node2 = list1.get(i+1);
            node1.right = node2 ;
            node1.left = null ;
            if(i==0){
                root.left=node1.left;
                root.right=node1.right;
            }
        }
    }
}
// after getting the logic
class Solution {
    TreeNode prev = null ;
    public void flatten(TreeNode root) {
        if(root==null) return ;
        flatten(root.right);
        flatten(root.left);
        root.left=null;
        root.right=prev;
        prev=root;
        return;
    }
}
